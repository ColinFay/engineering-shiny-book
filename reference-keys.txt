fig:00-app-presentation-1
fig:00-app-presentation-2
fig:00-app-presentation-3
fig:01-big-shiny-10
fig:02-planning-ahead-1
fig:03-structure-6
fig:04-golem-22
fig:06-ux-matters-1
fig:06-ux-matters-2
fig:06-ux-matters-5
fig:06-ux-matters-6
fig:06-ux-matters-10
fig:06-ux-matters-11
fig:06-ux-matters-16
fig:06-ux-matters-17
fig:06-ux-matters-19
fig:06-ux-matters-20
fig:06-ux-matters-21
fig:06-ux-matters-22
fig:06-ux-matters-23
fig:06-ux-matters-24
fig:06-ux-matters-25
fig:06-ux-matters-26
fig:06-ux-matters-27
fig:07-step-by-step-design-1
fig:09-prototyping-1
fig:09-prototyping-5
fig:09-prototyping-6
fig:09-prototyping-8
fig:10-step-by-step-build-11
fig:10-step-by-step-build-12
fig:10-step-by-step-build-13
fig:11-step-by-step-secure-7
fig:11-step-by-step-secure-10
fig:11-step-by-step-secure-21
fig:11-step-by-step-secure-23
fig:11-step-by-step-secure-31
fig:11-step-by-step-secure-43
fig:11-step-by-step-secure-44
fig:12-secure-1
fig:12-secure-2
fig:14-when-optimize-1
fig:14-when-optimize-4
fig:14-when-optimize-5
fig:14-when-optimize-10
fig:14-when-optimize-11
fig:14-when-optimize-12
fig:15-common-app-caveats-13
fig:15-common-app-caveats-14
successful-shiny-app
a-very-short-introduction-to-shiny
complex-shiny
reaching-the-cliff-of-complexity
balancing-complexities
assessing-code-complexity
production-grade-software-engineering
what-is-a-successful-shiny-app
it-exists
it-is-accurate
it-is-usable
it-is-immortal
planning-ahead
working-with-a-long-term-mindset
prepare-for-success
develop-with-the-kiss-principle
working-as-a-team-tools-and-structure
from-the-tools-point-of-view
from-the-team-point-of-view
structuring-project
shiny-app-as-a-package
what-is-in-a-production-grade-shiny-app
resources
using-shiny-modules
why-shiny-modules
when-to-use-shiny-modules
a-practical-walkthrough
communication-between-modules
structuring-your-app
business-logic-and-application-logic
small-is-beautiful-bis-repetita
conventions-matter
golem
what-is-golem
understanding-golem-app-structure
description-and-namespace
r
golem-config
instappwww
dev
man
workflow
step-1-design
step-2-prototype
step-3-build
step-4-strengthen
step-5-deploy
ux-matters
simplicity-is-gold
how-we-read-the-web-scanning-content
building-a-self-evident-app-or-at-least-self-explanatory
the-danger-of-feature-creep
what-is-feature-creep
too-much-reactivity
too-much-interactivity
web-accessibility
about-accessibility
making-your-app-accessible
evaluating-your-app-accessibility-and-further-reading
dont-rush-into-coding
designing-before-coding
the-urge-to-code
knowing-where-to-search
about-concept-map
ask-questions
about-the-end-users
building-personas
pre-existing-code-base
deployment
setting-up-for-success
create-a-golem
setting-things-up-with-dev01_start.r
fill-the-description-and-set-options
set-common-files
use-recommended-elements
add-utility-functions
changing-the-favicon
setting-infrastructure-for-prototyping
add-modules-in-dev02_dev.r
add-css-and-js-files
building-ispum-app
prototyping-is-crucial
prototype-then-polish
the-ui-first-approach
prototyping-shiny
fast-ui-prototyping-with-shinipsum
using-fakir-for-fake-data-generation
proto-rmdfirst
define-the-content-of-the-application
using-the-rmd-files-as-a-laboratory-notebook
rmd-vignettes-and-documentation-first
build-app-golem
add-dependencies
package-dependencies
importing-packages-and-functions
submodules-and-utility-functions
add-tests
documentation-and-code-coverage
vignette
code-coverage-and-continuous-integration
using-golem-dev-functions
build-yourself-safety-net
testing-your-app
testing-the-business-logic
shinytestserver
testing-the-interactive-logic
testing-the-app-load
a-reproducible-environment
renv
docker
version-control
version-control-git
why-version-control
git-basics-add---commit---push---pull
about-branches
issues
git-integration
with-rstudio
as-part-of-a-larger-world
about-git-flow
further-readings-on-git
automated-testing
deploy
before-deployment-checklist
sharing-your-app-as-a-package
install-on-your-machine
share-as-a-built-package
deploying-apps-with-golem
rstudio-environments
docker-1
need-for-optimization
build-first-then-optimize
identifying-bottlenecks
do-you-need-faster-functions
dont-sacrifice-readability
tools-for-profiling
profiling-r-code
profiling-shiny
more-resources-about-web-page-performance
common-app-caveats
reactivity-anti-patterns
reactivity-is-awesome-until-it-is-not
observe-vs-observeevent
building-triggers-and-watchers
using-r6-as-data-storage
logging-reactivity-with-whereami
r-does-too-much
rendering-the-ui-from-the-server-side
too-much-data-in-memory
reading-data
including-data-in-your-application
reading-external-datasets
using-external-databases
data-source-checklist
optimizing-shiny-code
optimizing-r-code
caching-elements
what-is-caching
native-caching-in-r
caching-in-shiny
asynchronous-in-shiny
how-to
using-javascript
introduction-1
a-quick-introduction-to-javascript
about-javascript
including-javascript-code-in-your-app
understanding-html-class-and-id
querying-in-vanilla-javascript
about-dom-events
about-jquery-and-jquery-selectors
client-side-javascript
common-patterns
where-to-put-them-back-to-javascript-events
javascript---shiny-communication
from-r-to-javascript
from-javascript-to-r
about-shinyjs-js-functions
one-last-thing-api-calls
learn-more-about-javascript
shiny-and-javascript
javascript-basics
jquery
intermediateadvanced-javascript
css
what-is-css
about-css
shinys-default-fluidpage
getting-started-with-css
about-css-syntax
css-selectors
css-properties
integrate-css-files-in-your-shiny-app
inline-css
writing-in-a-tagsstyle
including-external-files
using-r-packages
external-resources
